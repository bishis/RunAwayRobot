controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: true

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: true
      min_vel_x: -0.5
      max_vel_x: 0.5
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.5
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 0
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]

      # Critic parameters
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      Oscillation.scale: 0.5
      Oscillation.window_size: 10

planner_server:
  ros__parameters:
    use_sim_time: false
    planner_frequency: 5.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.2  # Reduced for precise path following
      use_astar: true
      allow_unknown: true

bt_navigator:
  ros__parameters:
    use_sim_time: false
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"

recoveries_server:
  ros__parameters:
    use_sim_time: false
    costmap_topic: "local_costmap/costmap"
    footprint_topic: "local_costmap/footprint"
    plugin_list: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
      min_spin_velocity: 0.4
    backup:
      plugin: "nav2_recoveries/BackUp"
      min_back_up_velocity: -0.1
      max_back_up_distance: 0.5
    wait:
      plugin: "nav2_recoveries/Wait"
      wait_time: 10.0

local_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 10.0
    publish_frequency: 5.0
    global_frame: "odom"
    robot_base_frame: "base_link"
    rolling_window: true
    width: 6.0
    height: 6.0
    resolution: 0.05
    plugins: ["obstacle_layer", "inflation_layer"]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: "scan"
      scan:
        topic: "/scan"
        sensor_frame: "laser"
        data_type: "LaserScan"
        clearing: true
        marking: true
        max_obstacle_height: 2.0
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.6
      cost_scaling_factor: 3.0

global_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 5.0
    publish_frequency: 2.0
    global_frame: "map"
    robot_base_frame: "base_link"
    rolling_window: false
    width: 12.0
    height: 12.0
    resolution: 0.05
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_subscribe_transient_local: true
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: "scan"
      scan:
        topic: "/scan"
        sensor_frame: "laser"
        data_type: "LaserScan"
        clearing: true
        marking: true
        max_obstacle_height: 2.0
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.6
      cost_scaling_factor: 3.0

waypoint_follower:
  ros__parameters:
    use_sim_time: false

lifecycle_manager:
  ros__parameters:
    use_sim_time: false
    node_names: [
      "slam_toolbox",
      "planner_server",
      "controller_server",
      "recoveries_server",
      "bt_navigator",
      "local_costmap",
      "global_costmap"
    ]

explore:
  ros__parameters:
    planner_frequency: 1.5  # Faster planning for exploration
    progress_timeout: 15.0
    explore_clear_threshold: 0.4  # For better detection of unexplored areas
