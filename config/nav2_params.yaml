controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: ["progress_checker"]
    goal_checker_plugin: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    # Add required parameters
    odom_topic: "odom"
    use_realtime_priority: false
    expected_controller_frequency: 20.0
    max_controller_duration: 0.5
    controller_patience: 5.0

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: true

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: -0.26
      min_vel_y: 0.0
      max_vel_x: 0.26
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

    # Add heartbeat parameters
    enable_heartbeat: true
    heartbeat_interval: 1.0
    heartbeat_timeout: 5.0

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true
      visualize_potential: true

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.1
    default_bt_xml_filename: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_w_replanning_and_recovery.xml"
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

recoveries_server:
  ros__parameters:
    use_sim_time: false
    costmap_topic: "local_costmap/costmap"
    footprint_topic: "local_costmap/footprint"
    plugin_list: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
      min_spin_velocity: 0.4
    backup:
      plugin: "nav2_recoveries/BackUp"
      min_back_up_velocity: -0.1
      max_back_up_distance: 0.5
    wait:
      plugin: "nav2_recoveries/Wait"
      wait_time: 10.0

docking_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 50.0
    dock_plugins: ["SimpleChargingDock"]  # Use available plugin

    SimpleChargingDock:
      plugin: "opennav_docking::SimpleChargingDock"  # Correct plugin type
      docking_tolerance: 0.05
      max_attempts: 3
      docking_timeout: 10.0
      docking_distance: 0.5
      goal_checker_plugin: "nav2_controller::SimpleGoalChecker"


local_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 5.0
    publish_frequency: 2.0
    global_frame: odom
    robot_base_frame: base_link
    rolling_window: true
    width: 3
    height: 3
    resolution: 0.05
    robot_radius: 0.22
    plugins: ["voxel_layer", "inflation_layer"]

    voxel_layer:
      plugin: "nav2_costmap_2d::VoxelLayer"
      enabled: true
      publish_voxel_map: true
      origin_z: 0.0
      z_resolution: 0.05
      z_voxels: 16
      max_obstacle_height: 2.0
      mark_threshold: 0
      observation_sources: scan
      scan:
        topic: /scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        data_type: "LaserScan"

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.55

global_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 1.0
    publish_frequency: 1.0
    global_frame: map
    robot_base_frame: base_link
    robot_radius: 0.22
    resolution: 0.05
    track_unknown_space: true
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: scan
      scan:
        topic: /scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        data_type: "LaserScan"

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_subscribe_transient_local: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.55

waypoint_follower:
  ros__parameters:
    use_sim_time: false

collision_monitor:
  ros__parameters:
    use_sim_time: false
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    observation_sources: ["scan"]

    # Add polygon parameters
    polygons: ["base_footprint"] # List of polygons to monitor
    base_footprint: # Define the robot's footprint
      type: "polygon"
      points: "[[-0.15, -0.15], [-0.15,  0.15], [ 0.15,  0.15], [ 0.15, -0.15]]"
      action_type: "stop" # Action to take when collision detected
      min_points: 3 # Minimum points needed to detect collision
      visualize: true # Show polygon in rviz
      polygon_height: 0.2 # Height of the collision polygon
      enabled: true # Enable this polygon
    scan:
      type: "scan"
      topic: "/scan"
      min_height: 0.0
      max_height: 2.0
      obstacle_range: 2.5
      raytrace_range: 3.0
      observation_persistence: 0.0
      inf_is_valid: false
      marking: true
      clearing: true
      data_type: "LaserScan"
    transform_tolerance: 0.2
    footprint_topic: "/local_costmap/published_footprint"
    publish_rate: 10.0

lifecycle_manager:
  ros__parameters:
    use_sim_time: false
    autostart: true
    node_names:
      [
        "collision_monitor",
        "docking_server",
        "slam_toolbox",
        "planner_server",
        "controller_server",
        "recoveries_server",
        "bt_navigator",
        "local_costmap",
        "global_costmap",
      ]
    configure_timeout: 20.0
    activate_timeout: 10.0
    startup_timeout: 30.0
