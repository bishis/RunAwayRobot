bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.3
    default_bt_xml_filename: "/opt/ros/jazzy/share/nav2_bt_navigator/behavior_trees/navigate_w_replanning_and_recovery.xml"
    
    # Blackboard variables
    goal_blackboard_id: goal
    goals_blackboard_id: goals
    path_blackboard_id: path
    
    # plugin_lib_names:
    #   - nav2_spin_action_bt_node
    #   - nav2_wait_action_bt_node
    #   - nav2_clear_costmap_service_bt_node
    #   - nav2_is_stuck_condition_bt_node
    #   - nav2_goal_reached_condition_bt_node
    #   - nav2_initial_pose_received_condition_bt_node
    #   - nav2_reinitialize_global_localization_service_bt_node
    #   - nav2_rate_controller_bt_node
    #   - nav2_distance_controller_bt_node
    #   - nav2_speed_controller_bt_node
    #   - nav2_recovery_node_bt_node
    #   - nav2_pipeline_sequence_bt_node
    #   - nav2_round_robin_node_bt_node
    #   - nav2_transform_available_condition_bt_node
    #   - nav2_time_expired_condition_bt_node
    #   - nav2_distance_traveled_condition_bt_node
    #   - nav2_single_trigger_bt_node

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

    action_server_result_timeout: 30.0
    action_server_goal_timeout: 30.0
    recovery_plugins: ["spin", "backup", "wait", "clear_costmap"]
    recovery_behavior_ids: ["spin", "backup", "wait", "clear_costmap"]

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 9.0
    min_x_velocity_threshold: 0.05
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.2
    failure_tolerance: 1.0
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"]
    current_goal_checker: "goal_checker"
    current_progress_checker: "progress_checker"
    odom_topic: "/odom"
    cmd_vel_topic: "/cmd_vel"
    transform_tolerance: 0.5
    enable_controller_plugin_verification: false
    controller_patience: 20.0
    max_controller_duration: 5.0
    enable_heartbeat: true
    heartbeat_interval: 0.1
    heartbeat_timeout: 5.0

    # More forgiving progress checker
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3
      movement_time_allowance: 10.0

    # Much looser goal tolerances
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.3     # Increase from 0.3
      yaw_goal_tolerance: 3.14           
      stateful: false            # Don't require stopping at goal
      trans_stopped_velocity: 0.25  # Allow higher velocity at goal
      theta_stopped_velocity: 0.25  # Allow higher rotation at goal

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      
      # Angular velocity limits
      min_vel_theta: 0.2      # Lower minimum to allow gentler turns
      max_vel_theta: 1.3     # Match motor controller max
      
      # Forward motion limits
      min_vel_x: -0.05
      max_vel_x: 0.1
      
      # Reduce path following strictness
      path_distance_bias: 8.0       # Care less about exact path
      goal_distance_bias: 24.0      # Focus more on goal
      goal_align_bias: 4.0         # Much lower alignment priority
      
      # Very forgiving tolerances
      xy_goal_tolerance: 0.5       # Match goal checker
      yaw_goal_tolerance: 1.57     # Match goal checker
      
      # Critics - reduce path alignment importance
      critics: ["Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "GoalDist"]
      BaseObstacle.scale: 0.4
      GoalAlign.scale: 4.0     # Reduced for gentler alignment
      PathAlign.scale: 4.0     # Reduced for gentler alignment
      GoalDist.scale: 24.0     # Keep goal priority high
      
      # More forgiving oscillation detection
      oscillation_reset_dist: 0.6
      oscillation_reset_angle: 1.57  # 90 degrees
      
      # Slower acceleration to prevent quick direction changes
      acc_lim_theta: 0.2
      decel_lim_theta: -0.2
      
      # More aggressive rotation
      acc_lim_theta: 1.0
      decel_lim_theta: -1.0
      
      # Prioritize rotation to goal
      path_distance_bias: 32.0
      goal_distance_bias: 20.0
      goal_align_bias: 10.0
      
      # Reduce rotation granularity
      angular_granularity: 0.05
      yaw_goal_tolerance: 0.1
      
      # Trajectory sampling for rotation
      vtheta_samples: 20
      sim_time: 2.5
      
      # Prevent oscillation
      oscillation_reset_dist: 0.05
      oscillation_reset_angle: 0.2
      
      # Much slower velocity limits for slippery surface
      max_speed_xy: 0.2
      
      # Very gentle acceleration limits
      acc_lim_x: 0.2
      acc_lim_theta: 0.3
      decel_lim_x: -0.2
      
      # Increase path following precision
      path_distance_bias: 45.0
      goal_distance_bias: 3.0

      backward_motion_enabled: true 
      # Better obstacle avoidance
      critics: ["Oscillation", "BaseObstacle", "PathAlign", "GoalAlign"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 5.0

      # Prevent quick direction changes
      angular_granularity: 0.1
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 1.0
      
      # More trajectory samples for smoother motion
      vx_samples: 8
      vtheta_samples: 12
      sim_time: 2.0
      min_speed_theta: 0.0
      # Very forgiving goal tolerances
      trans_stopped_velocity: 0.1
      theta_stopped_velocity: 0.1   
      # Heavily reduce path precision requirements
      occdist_scale: 0.01
      
      # Simplified critics with adjusted weights
      critics: ["Oscillation", "BaseObstacle", "PathAlign", "GoalDist"]
      GoalDist.scale: 5.0
      
      # More lenient oscillation checks
      oscillation_reset_dist: 0.5
      oscillation_reset_angle: 0.75
      
      # Simplified obstacle handling
      max_obstacle_dist: 0.8
      min_obstacle_dist: 0.3
      
      # Additional parameters
      prune_plan: true
      debug_trajectory_details: true
      publish_evaluation: true
      publish_global_plan: true
      publish_local_plan: true
      publish_trajectories: true
      publish_cost_grid_pc: true

      max_planning_time: 5.0
      max_backup_dist: 0.3
      backup_vel: -0.1

    # Make controller more robust near obstacles
    min_vel_x: -0.05
    max_vel_x: 1.3
    min_vel_theta: 0.1
    max_vel_theta: 0.5
    min_speed_xy: 0.025
    
    # Increase clearance checking
    robot_radius: 0.16
    footprint: "[[-0.15, -0.16], [-0.15, 0.16], [0.17, 0.16], [0.17, -0.16]]"
    footprint_padding: 0.05
    inflation_layer:
      inflation_radius: 0.5
      cost_scaling_factor: 5.0
    
    # Recovery behavior
    recovery_enabled: true
    oscillation_timeout: 5.0
    oscillation_distance: 0.1

planner_server:
  ros__parameters:
    use_sim_time: false
    planner_plugins: ["GridBased"]
    # Increased tolerance for path planning
    tolerance: 1.0  # Increased from 0.5
    use_astar: false
    allow_unknown: true
    max_iterations: 1000000
    max_on_approach_iterations: 1000
    max_planning_time: 5.0
    
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      # Increase these tolerances to improve planning success
      tolerance: 1.0  # Doubled from default
      use_astar: false
      allow_unknown: true
      # Additional parameters to make planner more robust
      default_tolerance: 1.0
      visualize_potential: false
      use_final_approach_orientation: false
      # Make more forgiving about planning through tight spaces
      neutral_cost: 50  # Reduced from 66
      cost_factor: 0.55  # Reduced from default 3.0
      publish_potential: true
      bilateral_filter_diameter: 20
      bilateral_sigma_dist: 5.0
      bilateral_sigma_color: 15.0
      smoothing_weight: 0.1
      skip_straight_line_planning: true
      # Accept more paths even if not ideal
      min_path_length: 0.5
      heuristic_fallback: true  # Fall back to heuristic if needed

behavior_server:
  ros__parameters:
    use_sim_time: false
    local_costmap_topic: local_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_costmap_topic: global_costmap/costmap_raw
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    wait:
      plugin: "nav2_behaviors::Wait"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2
    enable_stamped_cmd_vel: true

local_costmap:
  local_costmap:
    ros__parameters:
      # Increase update frequency for more responsive maps
      # Adjust frequencies to be more balanced with global map
      update_frequency: 5.0    # Keep at default
      publish_frequency: 2.0   # Reduced from 5.0 to reduce processing load
      
      
      # Keep other settings
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      always_send_full_costmap: true

      plugins: ["voxel_layer", "inflation_layer"]

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.55

      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: true
        publish_voxel_map: true
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
      static_layer:
        map_subscribe_transient_local: true

      human_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: true
        observation_sources: human_obstacles
        human_obstacles:
          topic: /human_obstacles
          max_obstacle_height: 2.0
          min_obstacle_height: 0.1
          # Enable both marking and clearing
          clearing: true
          marking: true
          sensor_frame: map
          data_type: "PointCloud2"
          expected_update_rate: 0.0
          # Reduce the persistence to avoid long-lasting ghosts
          observation_persistence: 0.1
          obstacle_range: 4.0
          raytrace_range: 4.5
          mark_threshold: 1
          
        track_unknown_space: false
        footprint_clearing_enabled: true

# global_costmap:
global_costmap:
  ros__parameters:
    update_frequency: 5.0
    publish_frequency: 1.0
    global_frame: map
    robot_base_frame: base_link
    footprint: "[[-0.16, -0.19], [-0.16, 0.19], [0.16, 0.19], [0.16, -0.19]]" 
    footprint_padding: 0.1
    resolution: 0.05
    track_unknown_space: false
    trinary_costmap: true
    transform_tolerance: 0.3
    initial_transform_timeout: 60.0
    always_send_full_costmap: false
    plugins: ["static_layer", "obstacle_layer", "inflation_layer", "human_layer"]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: scan
      scan:
        topic: /scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        data_type: "LaserScan"
        raytrace_max_range: 1.5
        raytrace_min_range: 0.05
        obstacle_max_range: 1.0
        obstacle_min_range: 0.05
        inf_is_valid: false
        observation_persistence: 1.0 
        marking_buffers: 1
        clearing_buffers: 1

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      enabled: true
      map_subscribe_transient_local: true
      subscribe_to_updates: true
      transform_tolerance: 0.1
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 2.0
      inflation_radius: 0.4
      
    # Update human layer config
    human_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: human_obstacles
      human_obstacles:
        topic: /human_obstacles
        max_obstacle_height: 2.0
        clearing: false
        marking: true
        sensor_frame: map
        data_type: "PointCloud2"
        expected_update_rate: 0.5
        observation_persistence: 10.0  # Increased persistence
        obstacle_range: 5.0  # Increased range
        raytrace_range: 5.0
        obstacle_max_range: 5.0
        obstacle_min_range: 0.0
        inf_is_valid: false
        mark_threshold: 1

collision_monitor:
  ros__parameters:
    use_sim_time: false
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    observation_sources: ["scan"]
    
    # Polygon parameters for robot footprint
    polygons: ["robot_footprint"]
    robot_footprint:
      type: "polygon"
      points: "[[-0.15, -0.16], [-0.15, 0.16], [0.17, 0.16], [0.17, -0.16]]"  # 13cm radius square approximation
      action_type: "stop"  # Options: "stop", "slowdown", "limit"
      min_points: 2
      visualize: true
      enabled: true

    # Scan configuration
    scan:
      type: "scan"
      topic: "/scan"
      min_height: 0.05
      max_height: 0.5
      obstacle_range: 0.5      # Detect obstacles up to 0.5m
      raytrace_range: 1.0     # Clear space up to 1m
      observation_persistence: 0.0  # How long to keep obstacle points
      inf_is_valid: false
      marking: true
      clearing: true
      data_type: "LaserScan"

    # Collision checking parameters
    stop_on_collision: true          # Stop robot when collision detected
    scan_obstacle_range: 0.4         # Maximum range to check for obstacles
    slowdown_radius: 0.3             # Start slowing at this distance
    approach_velocity_scaling: 0.5    # Scale velocity when approaching obstacles
    collision_range: 0.2             # Emergency stop distance (slightly larger than robot radius)
    
    # Publishing parameters
    publish_rate: 10.0
    observation_points_per_scan: 2
    velocity_scaling_factor: 0.5      # Global scaling of velocities
    min_velocity_scaling: 0.2         # Minimum velocity scaling when near obstacles
    
    # Footprint parameters
    footprint_topic: "/local_costmap/published_footprint"
    base_frame_id: "base_link"
    transform_tolerance: 0.5 