bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.1
    default_bt_xml_filename: "/opt/ros/jazzy/share/nav2_bt_navigator/behavior_trees/navigate_w_replanning_and_recovery.xml"
    
    # Blackboard variables
    goal_blackboard_id: goal
    goals_blackboard_id: goals
    path_blackboard_id: path
    
    plugin_lib_names:
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"]
    current_goal_checker: "goal_checker"
    current_progress_checker: "progress_checker"
    odom_topic: "/odom"
    cmd_vel_topic: "/cmd_vel"
    transform_tolerance: 1.0
    enable_controller_plugin_verification: false
    controller_patience: 15.0
    max_controller_duration: 0.5
    enable_heartbeat: true
    heartbeat_interval: 0.25
    heartbeat_timeout: 15.0

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: true
      min_vel_x: -0.26
      min_vel_y: 0.0
      max_vel_x: 0.26
      max_vel_y: 0.0
      max_vel_theta: 1.0
      acc_lim_x: 1.0
      acc_lim_y: 0.0
      acc_lim_theta: 1.5
      vx_samples: 20
      vtheta_samples: 20
      sim_time: 2.0
      xy_goal_tolerance: 0.25
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true
      visualize_potential: true

behavior_server:
  ros__parameters:
    use_sim_time: false
    local_costmap_topic: local_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_costmap_topic: global_costmap/costmap_raw
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    wait:
      plugin: "nav2_behaviors::Wait"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2
    enable_stamped_cmd_vel: true

local_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 5.0
    global_frame: odom
    robot_base_frame: base_link
    plugins: ["voxel_layer", "inflation_layer"]

    voxel_layer:
      plugin: "nav2_costmap_2d::VoxelLayer"
      enabled: true
      publish_voxel_map: true
      origin_z: 0.0
      z_resolution: 0.05
      z_voxels: 16
      max_obstacle_height: 2.0
      mark_threshold: 0
      observation_sources: scan
      scan:
        topic: /scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        data_type: "LaserScan"

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0
      inflation_radius: 0.55

global_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 1.0
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      scan:
        topic: /scan

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      cost_scaling_factor: 3.0

collision_monitor:
  ros__parameters:
    use_sim_time: false
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    observation_sources: ["scan"]

    # Add polygon parameters
    polygons: ["base_footprint"] # List of polygons to monitor
    base_footprint: # Define the robot's footprint
      type: "polygon"
      points: "[[-0.15, -0.15], [-0.15,  0.15], [ 0.15,  0.15], [ 0.15, -0.15]]"
      action_type: "stop" # Action to take when collision detected
      min_points: 3 # Minimum points needed to detect collision
      visualize: true # Show polygon in rviz
      polygon_height: 0.2 # Height of the collision polygon
      enabled: true # Enable this polygon
    scan:
      type: "scan"
      topic: "/scan"
      min_height: 0.0
      max_height: 2.0
      obstacle_range: 2.5
      raytrace_range: 3.0
      observation_persistence: 0.0
      inf_is_valid: false
      marking: true
      clearing: true
      data_type: "LaserScan"
    transform_tolerance: 0.2
    footprint_topic: "/local_costmap/published_footprint"
    publish_rate: 10.0

